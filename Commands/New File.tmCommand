<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby -KU

require "#{ENV['TM_SUPPORT_PATH']}/lib/tm/detach"
TextMate.detach do
  script = &lt;&lt;-APPLESCRIPT
    tell app "TextMate" to activate
    menu_click({"TextMate", "File", "New Tab"})
    menu_click({"TextMate", "File", "Save"})

    -- tell application "System Events"
    --   tell process "TextMate"
    --     keystroke "a" using command down
    --     keystroke "#{File.basename ENV['TM_FILENAME']}"
    --   end tell
    -- end tell

    -- `menu_click`, by Jacob Rus, September 2006
    -- 
    -- Accepts a list of form: `{"Finder", "View", "Arrange By", "Date"}`
    -- Execute the specified menu item.  In this case, assuming the Finder 
    -- is the active application, arranging the frontmost folder by date.

    on menu_click(mList)
        local appName, topMenu, r

        -- Validate our input
        if mList's length &lt; 3 then error "Menu list is not long enough"

        -- Set these variables for clarity and brevity later on
        set {appName, topMenu} to (items 1 through 2 of mList)
        set r to (items 3 through (mList's length) of mList)

        -- This overly-long line calls the menu_recurse function with
        -- two arguments: r, and a reference to the top-level menu
        tell app "System Events" to my menu_click_recurse(r, ((process appName)'s (menu bar 1)'s (menu bar item topMenu)'s (menu topMenu)))
    end menu_click

    on menu_click_recurse(mList, parentObject)
        local f, r

        -- `f` = first item, `r` = rest of items
        set f to item 1 of mList
        if mList's length &gt; 1 then set r to (items 2 through (mList's length) of mList)

        -- either actually click the menu item, or recurse again
        tell app "System Events"
            if mList's length is 1 then
                click parentObject's menu item f
            else
                my menu_click_recurse(r, (parentObject's (menu item f)'s (menu f)))
            end if
        end tell
    end menu_click_recurse
  APPLESCRIPT

  system 'osascript', '-e', script
end
</string>
	<key>input</key>
	<string>none</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>keyEquivalent</key>
	<string>^@n</string>
	<key>name</key>
	<string>New File</string>
	<key>outputCaret</key>
	<string>afterOutput</string>
	<key>outputFormat</key>
	<string>text</string>
	<key>outputLocation</key>
	<string>discard</string>
	<key>uuid</key>
	<string>A135C40A-9158-4C5C-BE16-54626A3D601C</string>
	<key>version</key>
	<string>2</string>
</dict>
</plist>
